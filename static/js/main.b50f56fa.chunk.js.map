{"version":3,"sources":["components/FormContacts/FormContacts.module.css","components/ListContacts/ListContacts.module.css","components/Filter/Filter.module.css","components/Container/Container.module.css","components/Container/Container.js","components/FormContacts/FormContacts.js","components/ListContacts/ListContacts.js","components/Filter/Filter.js","App.js","index.js"],"names":["module","exports","Container","children","className","styles","FormContacts","state","name","number","handleChange","event","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","resetForm","this","Form","Label","Input","type","pattern","title","required","onChange","placeholder","Button","Component","ListContactsItem","id","onDelete","Item","Text","Span","onClick","ListContacts","contacts","length","List","map","contact","key","Filter","App","filter","addContact","uuidv4","find","toLowerCase","alert","trim","test","deleteContact","changeFilter","getVisibleContacts","normalizedFilter","includes","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b50f56fa.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"FormContacts_Form__1PDtW\",\"Label\":\"FormContacts_Label__13aMi\",\"Input\":\"FormContacts_Input__2v-lW\",\"Button\":\"FormContacts_Button__uqumT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"List\":\"ListContacts_List__2LALo\",\"Item\":\"ListContacts_Item__1md0j\",\"Text\":\"ListContacts_Text__3EW7Y\",\"Span\":\"ListContacts_Span__1L_ta\",\"Button\":\"ListContacts_Button__g8jEU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Label\":\"Filter_Label__3FoRN\",\"Input\":\"Filter_Input__20k7U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__3tQ9A\"};","import PropTypes from 'prop-types';\nimport styles from './Container.module.css';\n\nfunction Container({ children }) {\n    return <div className={styles.Container}>{children}</div>;\n}\n\nContainer.propTypes = {\n    children: PropTypes.node.isRequired,\n};\n\nexport default Container;\n","import { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './FormContacts.module.css';\n\nclass FormContacts extends Component {\n    state = {\n        name: '',\n        number: '',\n    };\n\n    handleChange = event => {\n        const { name, value } = event.currentTarget;\n        this.setState({ [name]: value });\n    };\n\n    handleSubmit = event => {\n        event.preventDefault();\n        this.props.onSubmit(this.state);\n\n        this.resetForm();\n    };\n\n    resetForm = () => this.setState({ name: '', number: '' });\n\n    render() {\n        const { name, number } = this.state;\n        return (\n            <form className={styles.Form} onSubmit={this.handleSubmit}>\n                <label className={styles.Label}>\n                    Ім'я\n                    <input\n                        className={styles.Input}\n                        type=\"text\"\n                        name=\"name\"\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ]) ? [a-zA-Zа-яА-Я]*)*$\"\n                        title=\"Ім'я може складатись лише із букв, апострофа, тире та пробілів. Наприклад Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan і т.д.\"\n                        required\n                        value={name}\n                        onChange={this.handleChange}\n                        placeholder=\"Ivan Ivanov\"\n                    />\n                </label>\n                <label className={styles.Label}>\n                    Номер\n                    <input\n                        className={styles.Input}\n                        type=\"tel\"\n                        name=\"number\"\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                        title=\"Номер телефону може складатись з цифр і може скаладтись з пробілів, тире, круглих дужок і може починатись з +\"\n                        required\n                        onChange={this.handleChange}\n                        value={number}\n                        placeholder=\"+38 (011) 123-45-\"\n                    />\n                </label>\n                <button className={styles.Button} type=\"submit\">\n                    Додати контакт\n                </button>\n            </form>\n        );\n    }\n}\n\nFormContacts.propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n};\n\nexport default FormContacts;\n","import PropTypes from 'prop-types';\n\nimport styles from './ListContacts.module.css';\n\nconst ListContactsItem = ({ id, name, number, onDelete }) => {\n    return (\n        <li className={styles.Item}>\n            <p className={styles.Text}>\n                {name}: <span className={styles.Span}>{number}</span>\n            </p>\n            <button\n                className={styles.Button}\n                type=\"button\"\n                onClick={() => onDelete(id)}\n                title=\"Видалити\"\n            >\n                Видалити\n            </button>\n        </li>\n    );\n};\n\nconst ListContacts = ({ contacts, onDelete }) => {\n    if (contacts.length === 0) return null;\n    return (\n        <ul className={styles.List}>\n            {contacts.map(contact => (\n                <ListContactsItem\n                    {...contact}\n                    onDelete={onDelete}\n                    key={contact.id}\n                />\n            ))}\n        </ul>\n    );\n};\n\nListContacts.propTypes = {\n    contacts: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            name: PropTypes.string.isRequired,\n            number: PropTypes.string.isRequired,\n        }),\n    ),\n    onDelete: PropTypes.func.isRequired,\n};\n\nexport default ListContacts;\n","import PropTypes from 'prop-types';\n\nimport styles from './Filter.module.css';\n\nconst Filter = ({ value, onChange }) => {\n    return (\n        <label className={styles.Label}>\n            Пошук контакту за іменем\n            <input\n                type=\"text\"\n                name=\"filter\"\n                className={styles.Input}\n                value={value}\n                onChange={onChange}\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                title=\"Ім'я може складатись лише із букв, апострофа, тире та пробілів. Наприклад Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan і т.д.\"\n                required\n            />\n        </label>\n    );\n};\n\nFilter.propTypes = {\n    value: PropTypes.string,\n    onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import React, { Component } from 'react';\nimport Container from './components/Container';\nimport ContactForm from './components/FormContacts';\nimport ContactList from './components/ListContacts';\nimport Filter from './components/Filter';\nimport { v4 as uuidv4 } from 'uuid';\nimport './App.css';\n\n\nclass App extends Component {\n\n    state = {\n        contacts: [\n            { id: 'id-1', name: 'John Smith', number: '369-11-54' },\n            { id: 'id-2', name: 'Elon Mask', number: '443-89-12' },\n            { id: 'id-3', name: 'Mark Shuttleworth', number: '617-48-74' },\n        ],\n        filter: '',\n    };\n\n    addContact = ({ name, number }) => {\n        const contact = {\n            id: uuidv4(),\n            name,\n            number,\n        };\n\n        const { contacts } = this.state;\n\n        if (\n            contacts.find(\n                contact => contact.name.toLowerCase() === name.toLowerCase(),\n            )\n        ) {\n            alert(`${name} вже присутній в довіднику контактів.`);\n        } else if (contacts.find(contact => contact.number === number)) {\n            alert(`${number} вже присутній в довіднику.`);\n        } else if (name.trim() === '' || number.trim() === '') {\n            alert(\"Введіть назву контакту і номер телефону!\");\n        } else if (!/\\d{3}[-]\\d{2}[-]\\d{2}/g.test(number)) {\n            alert('Введіть правильний номер телефону!');\n        } else {\n            this.setState(({ contacts }) => ({\n                contacts: [...contacts, contact],\n            }));\n        }\n    };\n\n    deleteContact = id =>\n        this.setState(({ contacts }) => ({\n            contacts: contacts.filter(contact => contact.id !== id),\n        }));\n\n    changeFilter = event => {\n        this.setState({ filter: event.currentTarget.value });\n    };\n\n    getVisibleContacts = () => {\n        const { contacts, filter } = this.state;\n        const normalizedFilter = filter.toLowerCase();\n\n        return contacts.filter(contact =>\n            contact.name.toLowerCase().includes(normalizedFilter),\n        );\n    };\n\n    render() {\n        const { filter } = this.state;\n        const visibleContacts = this.getVisibleContacts();\n\n        return (\n            <Container>\n                <h1>Телефонний довідник</h1>\n                <ContactForm onSubmit={this.addContact} />\n                <h2>Контакти</h2>\n                <Filter value={filter} onChange={this.changeFilter} />\n                <ContactList\n                    contacts={visibleContacts}\n                    onDelete={this.deleteContact}\n                />\n            </Container>\n        );\n    }\n\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n)"],"sourceRoot":""}